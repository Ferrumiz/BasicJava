Index: 01072022/src/hippodrome/Hippodrome.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/01072022/src/hippodrome/Hippodrome.java b/01072022/src/hippodrome/Hippodrome.java
--- a/01072022/src/hippodrome/Hippodrome.java	(revision 1864e85b16f15a3ba3491ecbe80bd1a0a35e3b53)
+++ b/01072022/src/hippodrome/Hippodrome.java	(revision 8338af8d424fb64df0bcf262aa951fcd19740917)
@@ -4,6 +4,7 @@
 import hippodrome.dinosaur.*;
 import hippodrome.horses.*;
 import hippodrome.spider.*;
+
 import java.util.ArrayList;
 import java.util.List;
 import java.util.Random;
@@ -14,10 +15,10 @@
 
         Hippodrome hippodrome = new Hippodrome();
 
-        Cat bobcat = new Bobcat();
-        Cat houseCat = new HouseCat();
-        Cat puma = new Puma();
-        Cat cheetah = new Cheetah();
+        Cat bobcat = new Bobcat(5, 35);
+        Cat houseCat = new HouseCat(2, 15);
+        Cat puma = new Puma(13, 60);
+        Cat cheetah = new Cheetah(2, 95);
 
         Dinosaur spinosaurus = new Spinosaurus();
         Dinosaur stegosaurus = new Stegosaurus();
@@ -36,53 +37,47 @@
 
         List<Raceable> participants = new ArrayList<>();
 
-        participants.add(0, (Raceable) bobcat);
-        participants.add(1, (Raceable) houseCat);
-        participants.add(2, (Raceable) puma);
-        participants.add(3, (Raceable) cheetah);
-        participants.add(4, (Raceable) spinosaurus);
-        participants.add(5, (Raceable) stegosaurus);
-        participants.add(6, (Raceable) triceratops);
-        participants.add(7, (Raceable) tyrannosaurus);
-        participants.add(8, (Raceable) heavyHorse);
-        participants.add(9, (Raceable) pony);
-        participants.add(10, (Raceable) raceHorse);
-        participants.add(11, (Raceable) wingedHorse);
-        participants.add(11, (Raceable) birdEater);
-        participants.add(12, (Raceable) houseSpider);
-        participants.add(13, (Raceable) huntsmanSpider);
-        participants.add(14, (Raceable) wolfSpider);
-
-
+        participants.add(0, bobcat);
+        participants.add(1, houseCat);
+        participants.add(2, puma);
+        participants.add(3, cheetah);
+        participants.add(4, spinosaurus);
+        participants.add(5, stegosaurus);
+        participants.add(6, triceratops);
+        participants.add(7, tyrannosaurus);
+        participants.add(8, heavyHorse);
+        participants.add(9, pony);
+        participants.add(10, raceHorse);
+        participants.add(11, wingedHorse);
+        participants.add(11, birdEater);
+        participants.add(12, houseSpider);
+        participants.add(13, huntsmanSpider);
+        participants.add(14, wolfSpider);
 
-        for (Raceable participant : participants) {
+        for ( Raceable participant : participants ) {
             int startPosition = hippodrome.generateStartPosition(participants.size());
             participant.setPosition(startPosition); //вычисление рандомного числа
         }
 
         int length = 1000;
         Raceable winner = null;
-        int timer = 0;
 
-        while (timer < 5000) {
-            for (Raceable participant : participants) {
+        //Нужно предположить, что за одну итерацию цикла
+        //участник проходит расстояние которое он может пройти за одну секуту S = V*T;
+        //По факту к
+        boolean isNeedToStop = false;
+        while (!isNeedToStop) {
+            for ( Raceable participant : participants ) {
                 participant.step();
-                timer++;
             }
-
-            boolean isNeedToStop = false;
 
-            for (Raceable participant : participants) {
+            for ( Raceable participant : participants ) {
                 if (participant.isFinished(length)) {
                     isNeedToStop = true;
                     winner = participant;
                     break;
                 }
             }
-
-            if (isNeedToStop) {
-                break;
-            }
         }
 
         //вывести информацию о победителе winner
Index: 01072022/src/hippodrome/Raceable.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/01072022/src/hippodrome/Raceable.java b/01072022/src/hippodrome/Raceable.java
--- a/01072022/src/hippodrome/Raceable.java	(revision 1864e85b16f15a3ba3491ecbe80bd1a0a35e3b53)
+++ b/01072022/src/hippodrome/Raceable.java	(revision 8338af8d424fb64df0bcf262aa951fcd19740917)
@@ -1,5 +1,8 @@
 package hippodrome;
 
+//Данный интерфейс нужно повесить на абстрактные классы
+//тогда не нужно будет делать приведение типов в
+// главном методе
 public interface Raceable {
 
     void setPosition(int position);
Index: 01072022/src/hippodrome/cat/Bobcat.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/01072022/src/hippodrome/cat/Bobcat.java b/01072022/src/hippodrome/cat/Bobcat.java
--- a/01072022/src/hippodrome/cat/Bobcat.java	(revision 1864e85b16f15a3ba3491ecbe80bd1a0a35e3b53)
+++ b/01072022/src/hippodrome/cat/Bobcat.java	(revision 8338af8d424fb64df0bcf262aa951fcd19740917)
@@ -1,17 +1,14 @@
 package hippodrome.cat;
 
-import hippodrome.Raceable;
 
-public class Bobcat extends Cat implements Raceable {
+public class Bobcat extends Cat {
 
-    protected int age = 5;
-    protected double speed = 35;
+//    protected int age = 5;
+//    protected double speed = 35;
 
-    @Override
-    public double step() {
-        this.currentPosition = this.startPosition + this.speed - this.age;
-        this.distanceTraveled = this.currentPosition + this.distanceTraveled + this.speed;
-        return this.distanceTraveled;
+
+    public Bobcat(int age, double speed) {
+        super(age, speed);
     }
 
     @Override
@@ -19,14 +16,6 @@
         this.startPosition = bobcatPosition;
     }
 
-    @Override
-    public boolean isFinished(int length) {
-        if (this.distanceTraveled < length) {
-            return false;
-        } else {
-            return true;
-        }
-    }
 
     @Override
     public void printInformation() {
Index: 01072022/src/hippodrome/cat/Cat.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/01072022/src/hippodrome/cat/Cat.java b/01072022/src/hippodrome/cat/Cat.java
--- a/01072022/src/hippodrome/cat/Cat.java	(revision 1864e85b16f15a3ba3491ecbe80bd1a0a35e3b53)
+++ b/01072022/src/hippodrome/cat/Cat.java	(revision 8338af8d424fb64df0bcf262aa951fcd19740917)
@@ -1,6 +1,8 @@
 package hippodrome.cat;
 
-public abstract class Cat {
+import hippodrome.Raceable;
+
+public abstract class Cat implements Raceable {
 
     protected int age;
 
@@ -11,4 +13,22 @@
     protected double currentPosition;
 
     protected double distanceTraveled;
+
+    public Cat(int age, double speed) {
+        this.age = age;
+        this.speed = speed;
+    }
+
+    @Override
+    public boolean isFinished(int length) {
+        return !(this.distanceTraveled < length);
+    }
+
+    @Override
+    public double step() {
+        currentPosition = startPosition + speed - age;
+        distanceTraveled = currentPosition + distanceTraveled + this.speed;
+        return this.distanceTraveled;
+    }
+
 }
Index: 01072022/src/hippodrome/cat/Cheetah.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/01072022/src/hippodrome/cat/Cheetah.java b/01072022/src/hippodrome/cat/Cheetah.java
--- a/01072022/src/hippodrome/cat/Cheetah.java	(revision 1864e85b16f15a3ba3491ecbe80bd1a0a35e3b53)
+++ b/01072022/src/hippodrome/cat/Cheetah.java	(revision 8338af8d424fb64df0bcf262aa951fcd19740917)
@@ -1,17 +1,16 @@
 package hippodrome.cat;
 
-import hippodrome.Raceable;
 
-public class Cheetah extends Cat implements Raceable {
+public class Cheetah extends Cat {
 
-    protected int age = 2;
-    protected double speed = 95;
+    //Вот эти переменные уже заданы в абстрактном классе
+    //Здесь нужно установить значение в конструкторе
+    //Для примера сделаю это в во всех наследниках Cat
+    //protected int age = 2;
+    //protected double speed = 95;
 
-    @Override
-    public double step() {
-        this.currentPosition = this.startPosition + this.speed - this.age;
-        this.distanceTraveled = this.currentPosition + this.distanceTraveled + this.speed;
-        return this.distanceTraveled;
+    public Cheetah(int age, double speed) {
+        super(age, speed);
     }
 
     @Override
@@ -19,14 +18,6 @@
         startPosition = сheetahPosition;
     }
 
-    @Override
-    public boolean isFinished(int length) {
-        if (this.distanceTraveled < length) {
-            return false;
-        } else {
-            return true;
-        }
-    }
 
     @Override
     public void printInformation() {
Index: 01072022/src/hippodrome/cat/HouseCat.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/01072022/src/hippodrome/cat/HouseCat.java b/01072022/src/hippodrome/cat/HouseCat.java
--- a/01072022/src/hippodrome/cat/HouseCat.java	(revision 1864e85b16f15a3ba3491ecbe80bd1a0a35e3b53)
+++ b/01072022/src/hippodrome/cat/HouseCat.java	(revision 8338af8d424fb64df0bcf262aa951fcd19740917)
@@ -1,32 +1,22 @@
 package hippodrome.cat;
 
-import hippodrome.Raceable;
+
+public class HouseCat extends Cat {
 
-public class HouseCat extends Cat implements Raceable {
+//    protected int age = 2;
+//    protected double speed = 15;
 
-    protected int age = 2;
-    protected double speed = 15;
 
-    @Override
-    public double step() {
-        this.currentPosition = this.startPosition + this.speed - this.age;
-        this.distanceTraveled = this.currentPosition + this.distanceTraveled + this.speed;
-        return this.distanceTraveled;
+    public HouseCat(int age, double speed) {
+        super(age, speed);
     }
+
 
     @Override
     public void setPosition(int bobcatPosition) {
         this.startPosition = bobcatPosition;
     }
 
-    @Override
-    public boolean isFinished(int length) {
-        if (this.distanceTraveled < length) {
-            return false;
-        } else {
-            return true;
-        }
-    }
 
     @Override
     public void printInformation() {
Index: 01072022/src/hippodrome/cat/Puma.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/01072022/src/hippodrome/cat/Puma.java b/01072022/src/hippodrome/cat/Puma.java
--- a/01072022/src/hippodrome/cat/Puma.java	(revision 1864e85b16f15a3ba3491ecbe80bd1a0a35e3b53)
+++ b/01072022/src/hippodrome/cat/Puma.java	(revision 8338af8d424fb64df0bcf262aa951fcd19740917)
@@ -1,17 +1,14 @@
 package hippodrome.cat;
 
-import hippodrome.Raceable;
 
-public class Puma extends Cat implements Raceable {
+public class Puma extends Cat {
 
-    protected int age = 13;
-    protected double speed = 60;
+//    protected int age = 13;
+//    protected double speed = 60;
 
-    @Override
-    public double step() {
-        this.currentPosition = this.startPosition + this.speed - this.age;
-        this.distanceTraveled = this.currentPosition + this.distanceTraveled + this.speed;
-        return this.distanceTraveled;
+
+    public Puma(int age, double speed) {
+        super(age, speed);
     }
 
     @Override
@@ -19,14 +16,6 @@
         this.startPosition = bobcatPosition;
     }
 
-    @Override
-    public boolean isFinished(int length) {
-        if (this.distanceTraveled < length) {
-            return false;
-        } else {
-            return true;
-        }
-    }
 
     @Override
     public void printInformation() {
Index: 01072022/src/hippodrome/dinosaur/Dinosaur.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/01072022/src/hippodrome/dinosaur/Dinosaur.java b/01072022/src/hippodrome/dinosaur/Dinosaur.java
--- a/01072022/src/hippodrome/dinosaur/Dinosaur.java	(revision 1864e85b16f15a3ba3491ecbe80bd1a0a35e3b53)
+++ b/01072022/src/hippodrome/dinosaur/Dinosaur.java	(revision 8338af8d424fb64df0bcf262aa951fcd19740917)
@@ -1,6 +1,8 @@
 package hippodrome.dinosaur;
 
-public abstract class Dinosaur {
+import hippodrome.Raceable;
+
+public abstract class Dinosaur implements Raceable {
 
     protected double age;
 
@@ -11,4 +13,9 @@
     protected double currentPosition;
 
     protected double distanceTraveled;
+
+    @Override
+    public boolean isFinished(int length) {
+        return !(this.distanceTraveled < length);
+    }
 }
Index: 01072022/src/hippodrome/dinosaur/Spinosaurus.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/01072022/src/hippodrome/dinosaur/Spinosaurus.java b/01072022/src/hippodrome/dinosaur/Spinosaurus.java
--- a/01072022/src/hippodrome/dinosaur/Spinosaurus.java	(revision 1864e85b16f15a3ba3491ecbe80bd1a0a35e3b53)
+++ b/01072022/src/hippodrome/dinosaur/Spinosaurus.java	(revision 8338af8d424fb64df0bcf262aa951fcd19740917)
@@ -1,8 +1,7 @@
 package hippodrome.dinosaur;
 
-import hippodrome.Raceable;
 
-public class Spinosaurus extends Dinosaur implements Raceable {
+public class Spinosaurus extends Dinosaur {
 
     protected int age = 55;
     protected double speed = 88;
@@ -19,15 +18,6 @@
         this.startPosition = bobcatPosition;
     }
 
-    @Override
-    public boolean isFinished(int length) {
-        if (this.distanceTraveled < length) {
-            return false;
-        } else {
-            return true;
-        }
-    }
-
     @Override
     public void printInformation() {
         System.out.println("Spinosaurus won");
Index: 01072022/src/hippodrome/dinosaur/Stegosaurus.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/01072022/src/hippodrome/dinosaur/Stegosaurus.java b/01072022/src/hippodrome/dinosaur/Stegosaurus.java
--- a/01072022/src/hippodrome/dinosaur/Stegosaurus.java	(revision 1864e85b16f15a3ba3491ecbe80bd1a0a35e3b53)
+++ b/01072022/src/hippodrome/dinosaur/Stegosaurus.java	(revision 8338af8d424fb64df0bcf262aa951fcd19740917)
@@ -1,8 +1,8 @@
 package hippodrome.dinosaur;
 
-import hippodrome.Raceable;
 
-public class Stegosaurus extends Dinosaur implements Raceable {
+
+public class Stegosaurus extends Dinosaur  {
 
     protected int age = 75;
     protected double speed = 43;
@@ -19,14 +19,6 @@
         this.startPosition = bobcatPosition;
     }
 
-    @Override
-    public boolean isFinished(int length) {
-        if (this.distanceTraveled < length) {
-            return false;
-        } else {
-            return true;
-        }
-    }
 
     @Override
     public void printInformation() {
Index: 01072022/src/hippodrome/dinosaur/Triceratops.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/01072022/src/hippodrome/dinosaur/Triceratops.java b/01072022/src/hippodrome/dinosaur/Triceratops.java
--- a/01072022/src/hippodrome/dinosaur/Triceratops.java	(revision 1864e85b16f15a3ba3491ecbe80bd1a0a35e3b53)
+++ b/01072022/src/hippodrome/dinosaur/Triceratops.java	(revision 8338af8d424fb64df0bcf262aa951fcd19740917)
@@ -1,8 +1,8 @@
 package hippodrome.dinosaur;
 
-import hippodrome.Raceable;
 
-public class Triceratops extends Dinosaur implements Raceable {
+
+public class Triceratops extends Dinosaur  {
 
     protected int age = 120;
     protected double speed = 100;
@@ -19,15 +19,6 @@
         this.startPosition = bobcatPosition;
     }
 
-    @Override
-    public boolean isFinished(int length) {
-        if (this.distanceTraveled < length) {
-            return false;
-        } else {
-            return true;
-        }
-    }
-
     @Override
     public void printInformation() {
         System.out.println("Triceratops won");
Index: 01072022/src/hippodrome/dinosaur/Tyrannosaurus.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/01072022/src/hippodrome/dinosaur/Tyrannosaurus.java b/01072022/src/hippodrome/dinosaur/Tyrannosaurus.java
--- a/01072022/src/hippodrome/dinosaur/Tyrannosaurus.java	(revision 1864e85b16f15a3ba3491ecbe80bd1a0a35e3b53)
+++ b/01072022/src/hippodrome/dinosaur/Tyrannosaurus.java	(revision 8338af8d424fb64df0bcf262aa951fcd19740917)
@@ -1,8 +1,8 @@
 package hippodrome.dinosaur;
 
-import hippodrome.Raceable;
 
-public class Tyrannosaurus extends Dinosaur implements Raceable {
+
+public class Tyrannosaurus extends Dinosaur {
 
     protected int age = 110;
     protected double speed = 53;
@@ -19,14 +19,7 @@
         this.startPosition = bobcatPosition;
     }
 
-    @Override
-    public boolean isFinished(int length) {
-        if (this.distanceTraveled < length) {
-            return false;
-        } else {
-            return true;
-        }
-    }
+
 
     @Override
     public void printInformation() {
Index: 01072022/src/hippodrome/horses/HeavyHorse.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/01072022/src/hippodrome/horses/HeavyHorse.java b/01072022/src/hippodrome/horses/HeavyHorse.java
--- a/01072022/src/hippodrome/horses/HeavyHorse.java	(revision 1864e85b16f15a3ba3491ecbe80bd1a0a35e3b53)
+++ b/01072022/src/hippodrome/horses/HeavyHorse.java	(revision 8338af8d424fb64df0bcf262aa951fcd19740917)
@@ -1,8 +1,7 @@
 package hippodrome.horses;
 
-import hippodrome.Raceable;
 
-public class HeavyHorse extends Horse implements Raceable {
+public class HeavyHorse extends Horse {
 
     protected int age = 11;
     protected double speed = 37;
@@ -19,14 +18,6 @@
         this.startPosition = bobcatPosition;
     }
 
-    @Override
-    public boolean isFinished(int length) {
-        if (this.distanceTraveled < length) {
-            return false;
-        } else {
-            return true;
-        }
-    }
 
     @Override
     public void printInformation() {
Index: 01072022/src/hippodrome/horses/Horse.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/01072022/src/hippodrome/horses/Horse.java b/01072022/src/hippodrome/horses/Horse.java
--- a/01072022/src/hippodrome/horses/Horse.java	(revision 1864e85b16f15a3ba3491ecbe80bd1a0a35e3b53)
+++ b/01072022/src/hippodrome/horses/Horse.java	(revision 8338af8d424fb64df0bcf262aa951fcd19740917)
@@ -1,14 +1,21 @@
 package hippodrome.horses;
 
-public abstract class Horse {
+import hippodrome.Raceable;
+
+public abstract class Horse implements Raceable {
 
     protected double age;
 
     protected double speed;
 
-    protected  int startPosition;
+    protected int startPosition;
 
     protected double currentPosition;
 
     protected double distanceTraveled;
+
+    @Override
+    public boolean isFinished(int length) {
+        return !(this.distanceTraveled < length);
+    }
 }
Index: 01072022/src/hippodrome/horses/Pony.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/01072022/src/hippodrome/horses/Pony.java b/01072022/src/hippodrome/horses/Pony.java
--- a/01072022/src/hippodrome/horses/Pony.java	(revision 1864e85b16f15a3ba3491ecbe80bd1a0a35e3b53)
+++ b/01072022/src/hippodrome/horses/Pony.java	(revision 8338af8d424fb64df0bcf262aa951fcd19740917)
@@ -1,8 +1,7 @@
 package hippodrome.horses;
 
-import hippodrome.Raceable;
 
-public class Pony extends Horse implements Raceable {
+public class Pony extends Horse {
 
     protected int age = 5;
     protected double speed = 90;
@@ -19,14 +18,6 @@
         this.startPosition = bobcatPosition;
     }
 
-    @Override
-    public boolean isFinished(int length) {
-        if (this.distanceTraveled < length) {
-            return false;
-        } else {
-            return true;
-        }
-    }
 
     @Override
     public void printInformation() {
Index: 01072022/src/hippodrome/horses/RaceHorse.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/01072022/src/hippodrome/horses/RaceHorse.java b/01072022/src/hippodrome/horses/RaceHorse.java
--- a/01072022/src/hippodrome/horses/RaceHorse.java	(revision 1864e85b16f15a3ba3491ecbe80bd1a0a35e3b53)
+++ b/01072022/src/hippodrome/horses/RaceHorse.java	(revision 8338af8d424fb64df0bcf262aa951fcd19740917)
@@ -1,8 +1,7 @@
 package hippodrome.horses;
 
-import hippodrome.Raceable;
 
-public class RaceHorse extends Horse implements Raceable {
+public class RaceHorse extends Horse {
 
     protected int age = 6;
     protected double speed = 150;
@@ -19,14 +18,6 @@
         this.startPosition = bobcatPosition;
     }
 
-    @Override
-    public boolean isFinished(int length) {
-        if (this.distanceTraveled < length) {
-            return false;
-        } else {
-            return true;
-        }
-    }
 
     @Override
     public void printInformation() {
Index: 01072022/src/hippodrome/horses/WingedHorse.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/01072022/src/hippodrome/horses/WingedHorse.java b/01072022/src/hippodrome/horses/WingedHorse.java
--- a/01072022/src/hippodrome/horses/WingedHorse.java	(revision 1864e85b16f15a3ba3491ecbe80bd1a0a35e3b53)
+++ b/01072022/src/hippodrome/horses/WingedHorse.java	(revision 8338af8d424fb64df0bcf262aa951fcd19740917)
@@ -1,8 +1,7 @@
 package hippodrome.horses;
 
-import hippodrome.Raceable;
 
-public class WingedHorse extends Horse implements Raceable {
+public class WingedHorse extends Horse {
 
     protected int age = 17;
     protected double speed = 245;
@@ -19,14 +18,6 @@
         this.startPosition = bobcatPosition;
     }
 
-    @Override
-    public boolean isFinished(int length) {
-        if (this.distanceTraveled < length) {
-            return false;
-        } else {
-            return true;
-        }
-    }
 
     @Override
     public void printInformation() {
Index: 01072022/src/hippodrome/spider/BirdEater.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/01072022/src/hippodrome/spider/BirdEater.java b/01072022/src/hippodrome/spider/BirdEater.java
--- a/01072022/src/hippodrome/spider/BirdEater.java	(revision 1864e85b16f15a3ba3491ecbe80bd1a0a35e3b53)
+++ b/01072022/src/hippodrome/spider/BirdEater.java	(revision 8338af8d424fb64df0bcf262aa951fcd19740917)
@@ -1,8 +1,8 @@
 package hippodrome.spider;
 
-import hippodrome.Raceable;
 
-public class BirdEater extends Spider implements Raceable {
+
+public class BirdEater extends Spider {
 
     protected int age = 2;
     protected double speed = 20;
@@ -19,14 +19,6 @@
         this.startPosition = bobcatPosition;
     }
 
-    @Override
-    public boolean isFinished(int length) {
-        if (this.distanceTraveled < length) {
-            return false;
-        } else {
-            return true;
-        }
-    }
 
     @Override
     public void printInformation() {
Index: 01072022/src/hippodrome/spider/HouseSpider.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/01072022/src/hippodrome/spider/HouseSpider.java b/01072022/src/hippodrome/spider/HouseSpider.java
--- a/01072022/src/hippodrome/spider/HouseSpider.java	(revision 1864e85b16f15a3ba3491ecbe80bd1a0a35e3b53)
+++ b/01072022/src/hippodrome/spider/HouseSpider.java	(revision 8338af8d424fb64df0bcf262aa951fcd19740917)
@@ -1,8 +1,8 @@
 package hippodrome.spider;
 
-import hippodrome.Raceable;
 
-public class HouseSpider extends Spider implements Raceable {
+
+public class HouseSpider extends Spider {
 
     protected int age = 3;
     protected double speed = 11;
@@ -19,14 +19,6 @@
         this.startPosition = bobcatPosition;
     }
 
-    @Override
-    public boolean isFinished(int length) {
-        if (this.distanceTraveled < length) {
-            return false;
-        } else {
-            return true;
-        }
-    }
 
     @Override
     public void printInformation() {
Index: 01072022/src/hippodrome/spider/HuntsmanSpider.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/01072022/src/hippodrome/spider/HuntsmanSpider.java b/01072022/src/hippodrome/spider/HuntsmanSpider.java
--- a/01072022/src/hippodrome/spider/HuntsmanSpider.java	(revision 1864e85b16f15a3ba3491ecbe80bd1a0a35e3b53)
+++ b/01072022/src/hippodrome/spider/HuntsmanSpider.java	(revision 8338af8d424fb64df0bcf262aa951fcd19740917)
@@ -1,8 +1,7 @@
 package hippodrome.spider;
 
-import hippodrome.Raceable;
 
-public class HuntsmanSpider extends Spider implements Raceable {
+public class HuntsmanSpider extends Spider {
 
     protected int age = 4;
     protected double speed = 15;
@@ -19,14 +18,6 @@
         this.startPosition = bobcatPosition;
     }
 
-    @Override
-    public boolean isFinished(int length) {
-        if (this.distanceTraveled < length) {
-            return false;
-        } else {
-            return true;
-        }
-    }
 
     @Override
     public void printInformation() {
Index: 01072022/src/hippodrome/spider/Spider.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/01072022/src/hippodrome/spider/Spider.java b/01072022/src/hippodrome/spider/Spider.java
--- a/01072022/src/hippodrome/spider/Spider.java	(revision 1864e85b16f15a3ba3491ecbe80bd1a0a35e3b53)
+++ b/01072022/src/hippodrome/spider/Spider.java	(revision 8338af8d424fb64df0bcf262aa951fcd19740917)
@@ -1,6 +1,8 @@
 package hippodrome.spider;
 
-public abstract class Spider {
+import hippodrome.Raceable;
+
+public abstract class Spider implements Raceable {
 
     protected double age;
 
@@ -11,4 +13,9 @@
     protected double currentPosition;
 
     protected double distanceTraveled;
+
+    @Override
+    public boolean isFinished(int length) {
+        return !(this.distanceTraveled < length);
+    }
 }
Index: 01072022/src/hippodrome/spider/WolfSpider.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/01072022/src/hippodrome/spider/WolfSpider.java b/01072022/src/hippodrome/spider/WolfSpider.java
--- a/01072022/src/hippodrome/spider/WolfSpider.java	(revision 1864e85b16f15a3ba3491ecbe80bd1a0a35e3b53)
+++ b/01072022/src/hippodrome/spider/WolfSpider.java	(revision 8338af8d424fb64df0bcf262aa951fcd19740917)
@@ -1,8 +1,6 @@
 package hippodrome.spider;
 
-import hippodrome.Raceable;
-
-public class WolfSpider extends Spider implements Raceable {
+public class WolfSpider extends Spider {
 
     protected int age = 2;
     protected double speed = 30;
@@ -19,14 +17,6 @@
         this.startPosition = bobcatPosition;
     }
 
-    @Override
-    public boolean isFinished(int length) {
-        if (this.distanceTraveled < length) {
-            return false;
-        } else {
-            return true;
-        }
-    }
 
     @Override
     public void printInformation() {
